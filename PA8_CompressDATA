package edu.brandeis.cs12b.pa8;

import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.zip.Deflater;
import java.util.zip.DeflaterOutputStream;
import java.util.zip.GZIPOutputStream;
import java.util.zip.ZipOutputStream;

public abstract class Compresser {
	public abstract void compress(String[] orders, String filename) throws IOException;
}

public class Compress extends Compresser {
	/**
	 * Compress the given orders, and write the results to filename. You do not
	 * need to preserve the ordering of the orders, but you do need to preserve each one.
	 * 
	 * Each order is formatted as follows:
	 * 
	 * purchased_by|purchased_from|quantity|item_sku|price|zip|state
	 * 
	 * purchased_by will be a string containing the name of the person who made the order, like "Ryan Marcus" (without quotes)
	 * purchased_from will be a string containing the name of the store to which the order was made, like "Metzger's Hardware"
	 * quantity will be an integer between 0 and Integer.MAX_VALUE expressing the number of items ordered
	 * item_sku is a 6-digit number representing the SKU (a type of ID) of the item being purchased
	 * price is an integer representing the number of cents that an item costs (an order for N screws, each of which cost 5 cents, will have a price of 5)
	 * zip is the zipcode of the customer (ex: 02453)
	 * state is the two-character state abbreviation of the customer (ex: MA, NM)
	 *  
	 * 
	 * @param orders an array of orders to compress, described above
	 * @param filename the filename to write
	 * @throws IOException 
	 */

	
	public void compress(String[] orders, String filename) throws IOException {
		// compress file and output it
		DataOutputStream out = new DataOutputStream (new DeflaterOutputStream(new FileOutputStream (new File(filename))));
		// read file line by line and write it to filename
		for (String s: orders){
			out.writeUTF(s);
		}
		out.close();
	}
}
